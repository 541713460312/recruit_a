{"version":3,"sources":["biaodan/api/index.js","biaodan/index.js","index.js"],"names":["reqForm","data","file","axios","post","name","gender","phonenum","qqnum","classes","dormitory","organization","introduction","likes","future","traget","then","response","result","alert","msg","window","location","href","catch","error","console","log","Option","biaodan","state","confirmDirty","loading","handleSubmit","e","preventDefault","props","form","validateFieldsAndScroll","err","picture","setState","imageUrl","handleChange","info","getBase64","originFileObj","img","callback","reader","FileReader","addEventListener","readAsDataURL","isJpgOrPng","type","message","isLt5M","size","getFieldDecorator","this","prefixSelector","initialValue","style","width","value","uploadButton","className","title","labelCol","xs","span","sm","wrapperCol","onSubmit","Item","label","listType","showUploadList","action","beforeUpload","onChange","src","alt","rules","required","max","whitespace","len","addonBefore","help","TextArea","autosize","minRows","maxRows","offset","htmlType","textAlign","color","fontSize","React","Component","WrappedRegistrationForm","create","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.eccab017.chunk.js","sourcesContent":["import axios from 'axios'\r\n\r\n//提交数据\r\nexport const reqForm = (data, file) =>\r\n    axios.post('/recruit/table/add',\r\n        {\r\n            \"name\": data.name,\r\n            \"gender\": data.gender,\r\n            \"phonenum\": data.phonenum,\r\n            \"qqnum\": data.qqnum,\r\n            \"classes\": data.classes,\r\n            \"dormitory\": data.dormitory,\r\n            \"organization\": data.organization,\r\n            \"introduction\": data.introduction,\r\n            \"likes\": data.likes,\r\n            \"future\": data.future,\r\n            \"traget\": data.traget,\r\n            \"picture\": file\r\n        })\r\n        .then(function (response) {\r\n            const result = response.data;\r\n            alert(result.msg)\r\n            window.location.href=\"/recruit/table/index2\"\r\n        })\r\n        .catch(function (error) {\r\n            console.log(error);\r\n        });\r\n\r\n","import React from 'react'\r\nimport {\r\n    Form,\r\n    Input,\r\n    Tooltip,\r\n    Icon,\r\n    Select,\r\n    Button,\r\n    Card,\r\n    Upload,\r\n    message,\r\n} from 'antd';\r\nimport {reqForm} from './api'\r\n\r\nconst { Option } = Select;\r\n\r\nclass biaodan extends React.Component {\r\n    state = {\r\n        confirmDirty: false,\r\n        loading: false,\r\n        data:{},\r\n\r\n    };\r\n\r\n    handleSubmit = e => {\r\n        e.preventDefault();\r\n        this.props.form.validateFieldsAndScroll((err, data) => {\r\n            if (!err) {\r\n                if (data.picture!==null){\r\n                    this.setState(data);\r\n                    reqForm(data,this.state.imageUrl)\r\n                    console.log(reqForm.msg)\r\n                }\r\n                else {\r\n                    alert(\"请选择图片\")\r\n                }\r\n            }\r\n        });\r\n    };\r\n\r\n\r\n    getBase64(img, callback) {\r\n        const reader = new FileReader();\r\n        reader.addEventListener('load', () => callback(reader.result));\r\n        reader.readAsDataURL(img);\r\n    }\r\n\r\n\r\n    beforeUpload(file) {\r\n        const isJpgOrPng = file.type === 'image/jpeg' || file.type === 'image/png';\r\n        if (!isJpgOrPng) {\r\n            message.error('你只能上传 JPG/PNG 格式的文件!');\r\n        }\r\n        const isLt5M = file.size / 1024 / 1024 < 5;\r\n        if (!isLt5M) {\r\n            message.error('图片大小不能超过 5MB!');\r\n        }\r\n        return isJpgOrPng && isLt5M;\r\n    }\r\n\r\n    handleChange = info => {\r\n\r\n            this.getBase64(info.file.originFileObj, imageUrl =>\r\n                this.setState({\r\n                    imageUrl,\r\n                    loading: false,\r\n                }),\r\n            );\r\n       // }\r\n    };\r\n\r\n\r\n    render() {\r\n        const { getFieldDecorator } = this.props.form;\r\n\r\n        const formItemLayout = {\r\n            labelCol: {\r\n                xs: { span: 24 },\r\n                sm: { span: 4 },\r\n            },\r\n            wrapperCol: {\r\n                xs: { span: 24 },\r\n                sm: { span: 16 },\r\n            },\r\n        };\r\n        const tailFormItemLayout = {\r\n            wrapperCol: {\r\n                xs: {\r\n                    span: 24,\r\n                    offset: 0,\r\n                },\r\n                sm: {\r\n                    span: 16,\r\n                    offset: 8,\r\n                },\r\n            },\r\n        };\r\n        const prefixSelector = getFieldDecorator('prefix', {\r\n            initialValue: '86',\r\n        })(\r\n            <Select style={{ width: 70 }}>\r\n                <Option value=\"86\">+86</Option>\r\n            </Select>,\r\n        );\r\n\r\n\r\n        const uploadButton = (\r\n            <div>\r\n                <Icon type={this.state.loading ? 'loading' : 'plus'} />\r\n                <div className=\"ant-upload-text\">Upload</div>\r\n            </div>\r\n        );\r\n        const { imageUrl } = this.state;\r\n\r\n        return (\r\n            <Card title='报名表填写'>\r\n                <Form {...formItemLayout} onSubmit={this.handleSubmit}>\r\n                    <Form.Item label='照片'>\r\n                        <Upload\r\n                            name=\"file\"\r\n                            listType=\"picture-card\"\r\n                            showUploadList={false}\r\n                            action=\"/recruit/table/add\"\r\n                            beforeUpload={this.beforeUpload}\r\n                            onChange={this.handleChange}\r\n                        >\r\n                            {imageUrl ? <img src={imageUrl} alt=\"avatar\" style={{ width: '100%' }} /> : uploadButton}\r\n                        </Upload>\r\n                    </Form.Item>\r\n                    <Form.Item label='姓名'>\r\n                        {getFieldDecorator('name', {\r\n                            rules: [{ required: true, max:10, message: '请输入姓名!(最多10个字符)', whitespace: true }],\r\n                        })(<Input />)}\r\n                    </Form.Item>\r\n                    <Form.Item label='姓别'>\r\n                        {getFieldDecorator('gender', {\r\n                            rules: [{ required: true, len:1, message: '请输入姓别!(请输入男或女)', whitespace: true }],\r\n                        })(<Input />)}\r\n                    </Form.Item>\r\n                    <Form.Item label=\"手机\">\r\n                        {getFieldDecorator('phonenum', {\r\n                            rules: [{ required: true, len:11, message: '请输入正确的手机号码！' }],\r\n                        })(<Input addonBefore={prefixSelector} style={{ width: '100%' }} />)}\r\n                    </Form.Item>\r\n                    <Form.Item label='QQ'>\r\n                        {getFieldDecorator('qqnum', {\r\n                            rules: [{ required: true, max:11, message: '请输入正确的QQ号码!', whitespace: true }],\r\n                        })(<Input />)}\r\n                    </Form.Item>\r\n                    <Form.Item label='班级' help='如：软件工程1901'>\r\n                        {getFieldDecorator('classes', {\r\n                            rules: [{ required: true, max:10, message: '请输入正确的班级信息!', whitespace: true }],\r\n                        })(<Input />)}\r\n                    </Form.Item>\r\n                    <Form.Item label='学号'>\r\n                        {getFieldDecorator('dormitory', {\r\n                            rules: [{ required: true, len:12, message: '请输入正确的学号!', whitespace: true }],\r\n                        })(<Input />)}\r\n                    </Form.Item>\r\n                    <Form.Item\r\n                        label={\r\n                            <span>\r\n              已投递组织&nbsp;\r\n                                <Tooltip title=\"已经报名过的学校社团或组织\">\r\n                <Icon type=\"question-circle-o\" />\r\n              </Tooltip>\r\n            </span>\r\n                        }\r\n                        help='没有请填写’暂无‘'\r\n                    >\r\n                        {getFieldDecorator('organization', {\r\n                            rules: [{ required: true, max:251, message: '没有请填写’暂无‘(最多251字)', whitespace: true }],\r\n                        })(<Input.TextArea autosize={{ minRows: 3, maxRows: 6 }}  />)}\r\n                    </Form.Item>\r\n\r\n                    <Form.Item label='自我介绍'>\r\n                        {getFieldDecorator('introduction', {\r\n                            rules: [{ required: true,max:251, message: '此项为必填项!(最多251字)', whitespace: true }],\r\n                        })(<Input.TextArea autosize={{ minRows: 3, maxRows: 6 }}  />)}\r\n                    </Form.Item>\r\n                    <Form.Item label='IT相关爱好、特长'>\r\n                        {getFieldDecorator('likes', {\r\n                            rules: [{ required: true,max:251, message: '此项为必填项!(最多251字)', whitespace: true }],\r\n                        })(<Input.TextArea autosize={{ minRows: 3, maxRows: 6 }}  />)}\r\n                    </Form.Item>\r\n                    <Form.Item label='在实验室的学习展望'>\r\n                        {getFieldDecorator('future', {\r\n                            rules: [{ required: true,max:251, message: '此项为必填项!(最多251字)', whitespace: true }],\r\n                        })(<Input.TextArea autosize={{ minRows: 3, maxRows: 6 }}  />)}\r\n                    </Form.Item>\r\n                    <Form.Item label='理想目标'>\r\n                        {getFieldDecorator('traget', {\r\n                            rules: [{ required: true,max:251, message: '此项为必填项!(最多251字)', whitespace: true }],\r\n                        })(<Input.TextArea autosize={{ minRows: 3, maxRows: 6 }}  />)}\r\n                    </Form.Item>\r\n\r\n\r\n\r\n                    <Form.Item {...tailFormItemLayout}>\r\n                        <Button type=\"primary\" htmlType=\"submit\" style={{width:300}}>\r\n                            提交\r\n                        </Button>\r\n                    </Form.Item>\r\n                    <div style={{textAlign:'center'}}><span style={{color:'red'}}>注：</span>交表时间是9月20日从中午12点到晚上9点半，地点是工程训练中心339 (4号楼西侧)</div>\r\n                    <div style={{textAlign:'center'}}>更多信息请加招新群：572272821询问 </div>\r\n                    <div style={{textAlign:'center'}}><a href='http://shang.qq.com/wpa/qunwpa?idkey=286f620c2b57885df646fbe11f4985f695cb16218a1eb3d017b48616e0bbef94' ><Icon type=\"qq\" style={{ fontSize: '25px', color: '#08c' }}/>点击加群</a></div>\r\n                </Form>\r\n            </Card>\r\n        )\r\n    }\r\n}\r\nconst WrappedRegistrationForm = Form.create({})(biaodan);\r\n\r\nexport default (WrappedRegistrationForm)","import React from 'react'\r\nimport ReactDOM from 'react-dom';\r\nimport WrappedRegistrationForm from './biaodan'\r\n\r\nReactDOM.render((\r\n\r\n    <WrappedRegistrationForm/>\r\n\r\n), document.getElementById('root'));"],"sourceRoot":""}